<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on zerθsrv</title>
    <link>https://0srv.com/tags/devops/</link>
    <description>Recent content in devops on zerθsrv</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>nopkart@gmail.com (Ed)</managingEditor>
    <webMaster>nopkart@gmail.com (Ed)</webMaster>
    <lastBuildDate>Thu, 05 Aug 2021 16:35:02 +0800</lastBuildDate><atom:link href="https://0srv.com/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iyclo</title>
      <link>https://0srv.com/posts/iyclo/</link>
      <pubDate>Thu, 05 Aug 2021 16:35:02 +0800</pubDate>
      <author>nopkart@gmail.com (Ed)</author>
      <guid>https://0srv.com/posts/iyclo/</guid>
      <description>In a past gig, I was tasked to evaluate container schedulers. The usual suspects Kubernetes and Nomad were the contenders. One huge caveat with the whole exercise is that containers are being scheduled within AWS. You have EKS and ECS but can&amp;rsquo;t move it to on-premises infrastructure in case an inexplicable reason comes up. Looking closely at these schedulers, they are designed for bare-metal fleets. If you have servers across multiple data centers, like a CDN, then Kubernetes is the best out there.</description>
    </item>
    
    <item>
      <title>A Kind Demo</title>
      <link>https://0srv.com/posts/a-kind-demo/</link>
      <pubDate>Sat, 24 Jul 2021 17:50:30 +0800</pubDate>
      <author>nopkart@gmail.com (Ed)</author>
      <guid>https://0srv.com/posts/a-kind-demo/</guid>
      <description>Most of the DevOps interview assignments involving Kubernetes suggest using minikube. I believe the intent is to gauge a basic understanding of containers and related DevOps tasks. I have skills far from a Kubernetes expert but I hope the interviewing team won&amp;rsquo;t mind if we do a bit of experimenting.
Looking around, I see there are more options for local Kubernetes clusters. I find the kind project a very promising contender.</description>
    </item>
    
    <item>
      <title>Testing Strategy</title>
      <link>https://0srv.com/posts/testing-strategy/</link>
      <pubDate>Mon, 07 Jun 2021 17:50:30 +0800</pubDate>
      <author>nopkart@gmail.com (Ed)</author>
      <guid>https://0srv.com/posts/testing-strategy/</guid>
      <description>A testing strategy that applies to a wide range of software from ToDo to DeFi apps. What&amp;rsquo;s that like? Here&amp;rsquo;s my take on this turbulent topic.
In software, engineers are not engineers by trade. Definitions are mostly made up. Some are luckily agreed upon. A popular software engineer can redefine terms as they see fit and turn public perspective. What I call functional might be integration in someone’s vocabulary. Hopefully, the supporting text might clarify a particular perspective.</description>
    </item>
    
  </channel>
</rss>
